#+scale_y_discrete(name="Deposits", limits=c(0, 10000))
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()
#+scale_y_discrete(name="Deposits", limits=c(0, 10000))
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()
+scale_y_discrete(name="Deposits", limits=c(0, 10000))
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()+scale_y_discrete(name="Deposits", limits=c(0, 10000))
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()+scale_y_continuous(name="Deposits", limits=c(0, 100000))
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()+scale_y_continuous(name="Deposits")
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()
#+scale_y_continuous(name="Deposits")
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
top3_banks$Deposits<-top3_banks$Deposits/1000000
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
top3_banks$Deposits<-round(top3_banks$Deposits/1000000,2)
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
top3_banks
#top3_banks$Deposits<-round(top3_banks$Deposits/1000000,2)
#p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()
#+scale_y_continuous(name="Deposits")
#p1
# Read in data files
# Load branch count and deposit data for USA and filter for years 2010 and later
usa_branches<-read_csv("usa_bank_data.csv")
usa_branches<-subset(usa_branches,Year>=2010)
usa_branches<-subset(usa_branches,Year<2020)
# Load in branch count for all states and filter for years 2010 and later
region_branches<-read_csv("states_bank_data.csv")
region_branches<-subset(region_branches,Year>=2010)
# Load branch count and deposits for top banks
top_banks<-read_csv("top_3_banks.csv")
top_banks<-subset(top_banks,Year<2020)
#top_banks<-merge(y=usa_branches[,c("Year","Number_of_Branches", "Total_Deposits")],x=top_banks,by=c("Year"),all.x = TRUE)
# Load the Census population data from 2010 to 2019
census_population_data<-read_csv('census_states_population_2019.csv')
# Convert from a wide to a long format
pop_hist<-census_population_data%>%gather(Year,Population,4:13)
# Add a new column for population in ten thousands
pop_hist$Population_10000<-round(pop_hist$Population/10000,0)
# Remove rows related to regions and columns for Region Number and State Number
pop_hist<-pop_hist[!pop_hist$Region %in% c('Northeast Region','Midwest Region', 'South Region','West Region'),]
pop_hist<-subset(pop_hist,select=-c(Region_Number,State_Number))
# Filter the top banks data frame to exclude rows for "United States"
top_banks<-top_banks[!top_banks$Bank %in% c('United States'),]
# Derive state-wise totals for deposits and branches and combine with population for 2019
all2019<-read_csv("ALL_2019.csv")
all2019<-all2019%>%rename(state_code=STALPBR, region=STNAMEBR, total_assets=ASSET, city=CITYBR, domestic_deposits=DEPDOM, total_deposits=DEPSUM, branch_deposits=DEPSUMBR, branch=NAMEBR, bank_name=NAMEFULL,regulator=REGAGNT, specialization=SPECDESC, branch_id=RSSDID,zipcode=ZIPBR, location_id=UNINUMBR, spec_grp=SPECGRP, branch_lat=SIMS_LATITUDE, branch_lon=SIMS_LONGITUDE)
pop_2019<-subset(pop_hist,pop_hist$Year==2019)
pop_2019<-pop_2019%>%rename("region"="Region")
state_2019<-all2019%>%group_by(region)%>%summarize(tot_deposits=sum(branch_deposits),tot_branches=n(),state_code=state_code)
state_2019$region<-str_to_title(state_2019$region,locale="en")
state_2019<-merge(y=pop_2019,x=state_2019,by=c("region"),all.x = TRUE)
state_2019<-state_2019[complete.cases(state_2019),]
#state_2019
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
top3_banks
#top3_banks$Deposits<-round(top3_banks$Deposits/1000000,2)
#p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()
#+scale_y_continuous(name="Deposits")
#p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
#top3_banks
top3_banks$Deposits<-round(top3_banks$Deposits/1000000,2)
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
#top3_banks
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()
#+scale_y_continuous(name="Deposits")
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
top3_banks
#p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()
#+scale_y_continuous(name="Deposits")
#p1
# Read in data files
# Load branch count and deposit data for USA and filter for years 2010 and later
usa_branches<-read_csv("usa_bank_data.csv")
usa_branches<-subset(usa_branches,Year>=2010)
usa_branches<-subset(usa_branches,Year<2020)
# Load in branch count for all states and filter for years 2010 and later
region_branches<-read_csv("states_bank_data.csv")
region_branches<-subset(region_branches,Year>=2010)
# Load branch count and deposits for top banks
top_banks<-read_csv("top_3_banks.csv")
top_banks<-subset(top_banks,Year<2020)
#top_banks<-merge(y=usa_branches[,c("Year","Number_of_Branches", "Total_Deposits")],x=top_banks,by=c("Year"),all.x = TRUE)
# Load the Census population data from 2010 to 2019
census_population_data<-read_csv('census_states_population_2019.csv')
# Convert from a wide to a long format
pop_hist<-census_population_data%>%gather(Year,Population,4:13)
# Add a new column for population in ten thousands
pop_hist$Population_10000<-round(pop_hist$Population/10000,0)
# Remove rows related to regions and columns for Region Number and State Number
pop_hist<-pop_hist[!pop_hist$Region %in% c('Northeast Region','Midwest Region', 'South Region','West Region'),]
pop_hist<-subset(pop_hist,select=-c(Region_Number,State_Number))
# Filter the top banks data frame to exclude rows for "United States"
top_banks<-top_banks[!top_banks$Bank %in% c('United States'),]
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
top3_banks
#p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()
#+scale_y_continuous(name="Deposits")
#p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
#top3_banks
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()
#+scale_y_continuous(name="Deposits")
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
top3_banks$Year<-as.character(top3_banks$Year)
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()
#+scale_y_continuous(name="Deposits")
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
#top3_banks$Year<-as.character(top3_banks$Year)
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()
#+scale_y_continuous(name="Deposits")
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
#top3_banks$Year<-as.character(top3_banks$Year)
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()+scale_x_continuous(name="Year",breaks=c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019))+scale_y_continuous(name="Deposits")
#+scale_y_continuous(name="Deposits")
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
#top3_banks$Year<-as.character(top3_banks$Year)
top3_banks$Deposits<-top3_banks$Deposits/1000000
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()+scale_x_continuous(name="Year",breaks=c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019))+scale_y_continuous(name="Deposits")
#+scale_y_continuous(name="Deposits")
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
#top3_banks$Year<-as.character(top3_banks$Year)
top3_banks$Deposits<-top3_banks$Deposits/1000000
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()+scale_x_continuous(name="Year",breaks=c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019))+scale_y_continuous(name="Deposits in $Millions")
#+scale_y_continuous(name="Deposits")
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
#top3_banks$Year<-as.character(top3_banks$Year)
top3_banks$Deposits<-top3_banks$Deposits/1000000
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()+scale_x_continuous(name="Year",breaks=c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019))+scale_y_continuous(name="Deposits in $Millions",breaks=c(0,200,400,600,800,1000,1200,1400,1600))
#+scale_y_continuous(name="Deposits")
p1
# Create a line plot for deposits for top banks for 2020
top3_banks<-subset(top_banks,Bank!="All other banks")
#top3_banks$Year<-as.character(top3_banks$Year)
top3_banks$Deposits<-top3_banks$Deposits/1000000
p1<-ggplot(data=top3_banks,aes(x=Year,y=Deposits,color=Bank))+geom_line()+scale_x_continuous(name="Year",breaks=c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019))+scale_y_continuous(name="Deposits in $Millions",breaks=c(0,200,400,600,800,1000,1200,1400,1600))+labs(title = "Yearly trend in Deposits ($ million) for top 5 banks in the USA")
#+scale_y_continuous(name="Deposits")
p1
# Create a bar plot for branches for top banks for 2020
p2<-ggplot(top3_banks,aes(fill=Bank, y=Branches, x=Year))+ geom_bar(position="dodge", stat="identity",size=0.1,color="black",alpha=.7)+scale_x_continuous(name="Year",breaks=c(2014,2015,2016,2017,2018,2019))
p2
# Create a bar plot for branches for top banks for 2020
p2<-ggplot(top3_banks,aes(fill=Bank, y=Branches, x=Year))+ geom_bar(position="dodge", stat="identity",size=0.1,color="black",alpha=.7)+scale_x_continuous(name="Year",breaks=c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019))+scale_y_continuous(name="Branch count",breaks=c(0,1000,2000,3000,4000,5000,6000))+labs(title = "Yearly trend in Branch network for top 5 banks in the USA")
p2
p1<-ggplot(data=top_banks,aes(x=Year,y=Branches,group=Bank))+geom_col(aes(fill=Bank,color='black'),width=0.7)+scale_x_continuous(breaks = unique(top_banks$Year))+theme(axis.text.x=element_text(angle=0, vjust=1))+geom_text(aes(label=Branches),position='stack',size=2.5, vjust=1)+labs(x="Year",y="Number of Branches")+ggtitle("Branch Count for Top 5 Banks in USA")+scale_fill_brewer(palette="PiYG")
p1
p1<-ggplot(data=top_banks,aes(x=Year,y=Branches,group=Bank))+geom_col(aes(fill=Bank),width=0.7)+scale_x_continuous(breaks = unique(top_banks$Year))+theme(axis.text.x=element_text(angle=0, vjust=1))+geom_text(aes(label=Branches),position='stack',size=2.5, vjust=1)+labs(x="Year",y="Number of Branches")+ggtitle("Branch Count for Top 5 Banks in USA")+scale_fill_brewer(palette="PiYG")
p1
p1<-ggplot(data=top_banks,aes(x=Year,y=Branches,group=Bank))+geom_col(aes(fill=Bank),width=0.7)+scale_x_continuous(breaks = unique(top_banks$Year))+theme(axis.text.x=element_text(angle=0, vjust=1))+geom_text(aes(label=Branches),position='stack',size=2.5, vjust=-1)+labs(x="Year",y="Number of Branches")+ggtitle("Branch Count for Top 5 Banks in USA")+scale_fill_brewer(palette="PiYG")
p1
p1<-ggplot(data=top_banks,aes(x=Year,y=Branches,group=Bank))+geom_col(aes(fill=Bank),width=0.7)+scale_x_continuous(breaks = unique(top_banks$Year))+theme(axis.text.x=element_text(angle=0, vjust=1))+geom_text(aes(label=Branches),position='stack',size=2.5, vjust=2)+labs(x="Year",y="Number of Branches")+ggtitle("Branch Count for Top 5 Banks in USA")+scale_fill_brewer(palette="PiYG")
p1
p1<-ggplot(data=top_banks,aes(x=Year,y=Branches,group=Bank))+geom_col(aes(fill=Bank),width=0.7)+scale_x_continuous(breaks = unique(top_banks$Year))+theme(axis.text.x=element_text(angle=0, vjust=1))+geom_text(aes(label=Branches),position='stack',size=2.5, vjust=1)+labs(x="Year",y="Number of Branches")+ggtitle("Branch Count for Top 5 Banks in USA")+scale_fill_brewer(palette="PiYG")
p1
p1<-ggplot(data=top_banks,aes(x=Year,y=Branches,group=Bank))+geom_col(aes(fill=Bank),width=0.7)+scale_x_continuous(breaks = unique(top_banks$Year))+theme(axis.text.x=element_text(angle=0, vjust=1))+geom_text(aes(label=Branches),position='stack',size=2.5, vjust=1)+labs(x="Year",y="Number of Branches")+ggtitle("Branch Count for Top Banks in USA")+scale_fill_brewer(palette="PiYG")
p1
knitr::opts_chunk$set(echo = TRUE)
# Generate a chloropeth map showing per capita branch densty for different states
theme_set(theme_gray(base_size=10))
aspect_ratio<-2.5
height<-7
p0<-ggplot(data=state_per_cap_branch)+geom_polygon(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group),color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in 2019")
# Derive state-wise totals for deposits and branches and combine with population for 2019
#arrange((distinct(all2020, state)))
#length(unique(all2020$state_code))
pop_2019<-subset(pop_hist,pop_hist$Year==2019)
pop_2019<-pop_2019%>%rename("region"="Region")
head(pop_2019)
state_2019<-all2019%>%group_by(region)%>%summarize(tot_deposits=sum(branch_deposits),tot_branches=n())
state_2019$region<-str_to_title(state_2019$region,locale="en")
head(state_2019)
state_2019<-merge(y=pop_2019,x=state_2019,by=c("region"),all.x = TRUE)
state_2019<-state_2019[complete.cases(state_2019),]
#state_2019
# Import libraries
library(dplyr)
library(ggplot2)
library(kableExtra)
library(usmap)
#library(ggmap)
library(readr)
library(rgdal)
library(leaflet)
library(stringr)
library(tidyverse)
library(maps)
#library(geojsonio)
#library(geojsonR)
options(scipen=999)
# Load the Census population data from 2010 to 2019
census_population_data<-read_csv('census_states_population_2019.csv')
# Convert from a wide to a long format
pop_hist<-census_population_data%>%gather(Year,Population,4:13)
# Add a new column for population in ten thousands
pop_hist$Population_10000<-round(pop_hist$Population/10000,0)
# Remove rows related to regions and columns for Region Number and State Number
pop_hist<-pop_hist[!pop_hist$Region %in% c('Northeast Region','Midwest Region', 'South Region','West Region'),]
# Remove columns not required
pop_hist<-subset(pop_hist,select=-c(Region_Number,State_Number))
#pop_hist[0:60,]
# Load map data for USA
usa_map<-map_data("usa")
states<-map_data("state")
#ggplot(data=states) + geom_polygon(aes(x = long, y = lat, fill = region, group = group), color = "white") + coord_fixed(1.3) + guides(fill=FALSE)
# Load the Census population data from 2010 to 2019
census_population_data<-read_csv('census_states_population_2019.csv')
# Convert from a wide to a long format
pop_hist<-census_population_data%>%gather(Year,Population,4:13)
# Add a new column for population in ten thousands
pop_hist$Population_10000<-round(pop_hist$Population/10000,0)
# Remove rows related to regions and columns for Region Number and State Number
pop_hist<-pop_hist[!pop_hist$Region %in% c('Northeast Region','Midwest Region', 'South Region','West Region'),]
# Remove columns not required
pop_hist<-subset(pop_hist,select=-c(Region_Number,State_Number))
#pop_hist[0:60,]
# Load data for regional branches and USA as a whole
usa_branches<-read_csv("usa_bank_data.csv")
region_branches<-read_csv("states_bank_data.csv")
# Combine USA and States branches historical dataset into a common dataset
#combined_branches<-rbind(usa_branches,region_branches)
# Filter for years 2010 to 2019
region_branches<-subset(region_branches,Year>=2010)
# Merge branch data and population for states for years 2010 and later
branches_per_cap<-merge(y=region_branches,x=pop_hist,by=c("Year","Region"),all.x = TRUE)
#branches_per_cap[branches_per_cap$Region=="United States",]
# Calculate branches per 10000 people for the states
branches_per_cap$Branches_Per_Capita<-round(branches_per_cap$Number_of_Branches/branches_per_cap$Population_10000,2)
# Rename the region column in the states data and change case from lower to camel
states<-states%>%rename("Region"="region")
states$Region<-str_to_title(states$Region,locale="en")
state_per_cap_branch<-dplyr::left_join(states, branches_per_cap, by='Region')
#dim(state_per_cap_branch)
#names(state_per_cap_branch)
state_pcb_2019<-state_per_cap_branch %>% filter(Year==2019)
#head(state_pcb_2019, 10)
# Generate a chloropeth map showing per capita branch densty for different states
theme_set(theme_gray(base_size=10))
aspect_ratio<-2.5
height<-7
p0<-ggplot(data=state_per_cap_branch)+geom_polygon(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group),color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")
p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
p2
# Generate a chloropeth map showing per capita branch densty for different states
theme_set(theme_gray(base_size=10))
aspect_ratio<-3.5
height<-7
p0<-ggplot(data=state_per_cap_branch)+geom_polygon(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group),color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")
p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
p2
# Generate a chloropeth map showing per capita branch densty for different states
theme_set(theme_gray(base_size=12))
aspect_ratio<-3.5
height<-7
p0<-ggplot(data=state_per_cap_branch)+geom_polygon(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group),color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")
p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
p2
install.packages("ggiraph")
# Import libraries
library(dplyr)
library(ggplot2)
library(kableExtra)
library(usmap)
#library(ggmap)
library(readr)
library(rgdal)
library(leaflet)
library(stringr)
library(tidyverse)
library(maps)
library(ggiraph)
#library(geojsonio)
#library(geojsonR)
options(scipen=999)
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,tooltip=Branches_Per_Capita,group=group),color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")
p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
p2
#geom_point_interactive(aes(tooltip = model), size = 2)
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,tooltip=Branches_Per_Capita),color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")
p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
p2
#geom_point_interactive(aes(tooltip = model), size = 2)
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=Branches_Per_Capita),color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")
p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
#p2
girafe(code=print(p2))
#geom_point_interactive(aes(tooltip = model), size = 2)
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")
p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
#p2
girafe(code=print(p2))
#geom_point_interactive(aes(tooltip = model), size = 2)
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")
p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
#p2
girafe(code=print(p2))
#geom_point_interactive(aes(tooltip = model), size = 2)
# Create the same chloropeth map using the ggiraph package to make it interactive
aspect_ratio <- 2.5
height <- 7
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")+scale_fill_gradient(low="white",high="#CB454A")
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p1))
# Create the same chloropeth map using the ggiraph package to make it interactive
aspect_ratio<-3
height<-5
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")+scale_fill_gradient(low="white",high="#CB454A")
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p1))
# Create the same chloropeth map using the ggiraph package to make it interactive
aspect_ratio<-3.5
height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")+scale_fill_gradient(low="white",high="#CB454A")
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p1))
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
#height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+theme(legend.position="right")+scale_fill_gradient(low="white",high="#CB454A")+legend.background=element_rect(size=3,linetype='solid')
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
#height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1++theme(legend.position="right")+legend.background=element_rect(size=3,linetype='solid')
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
#height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right")+legend.background=element_rect(size=3,linetype='solid')
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
#height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=3,linetype='solid'))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2))
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
#height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2))
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
#height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="bottom",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=3))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2))
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
#height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=3))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2))
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
#height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6,legend.title=element_text(size=8)))
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
#height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2))
# Perform house keeping tasks
rm(p2)
gc()
defaultW<-getOption("warn")
options(warn=-1)
#[YOUR CODE]
#options(warn = defaultW)
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
#height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2))
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
#height<-4
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8),legend.box.margin = margin(0, 0, 0, 0, "cm"))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2))
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
height<-3
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8),legend.box.margin = margin(0, 0, 0, 0, "cm"))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2))
# Create the same chloropeth map using the ggiraph package to make it interactive
#aspect_ratio<-3.5
height<-2
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8),legend.box.margin = margin(0, 0, 0, 0, "cm"))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2))
# Create the same chloropeth map using the ggiraph package to make it interactive
aspect_ratio<-3.5
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8),legend.box.margin = margin(0, 0, 0, 0, "cm"))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2))
# Create the same chloropeth map using the ggiraph package to make it interactive
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8),legend.box.margin = margin(0, 0, 0, 0, "cm"))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2),width_svg=5,height_svg=4,options=list(opts_sizing(rescale = TRUE, width = .7)))
# Create the same chloropeth map using the ggiraph package to make it interactive
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8),legend.box.margin = margin(0, 0, 0, 0, "cm"))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2),width_svg=7,height_svg=4,options=list(opts_sizing(rescale=TRUE,width=.7)))
# Create the same chloropeth map using the ggiraph package to make it interactive
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8),legend.box.margin = margin(0, 0, 0, 0, "cm"))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2),width_svg=9,height_svg=8,options=list(opts_sizing(rescale=TRUE,width=.7)))
# Create the same chloropeth map using the ggiraph package to make it interactive
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8),legend.box.margin = margin(0, 0, 0, 0, "cm"))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2),width_svg=9,height_svg=6,options=list(opts_sizing(rescale=TRUE,width=.7)))
# Create the same chloropeth map using the ggiraph package to make it interactive
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8),legend.box.margin = margin(0, 0, 0, 0, "cm"))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2),width_svg=9,height_svg=6,options=list(opts_sizing(rescale=TRUE)))
# Create the same chloropeth map using the ggiraph package to make it interactive
p0<-ggplot(data=state_per_cap_branch)+geom_polygon_interactive(aes(x=long,y=lat,fill=Branches_Per_Capita,group=group,tooltip=paste(Region,":",Branches_Per_Capita)),data_id=state_per_cap_branch$Region,color="white")+theme_classic()+xlab("Longitude")+ylab("Latitude")+labs(title="Bank Branches Per 10000 people in the USA for 2019")
p1<-p0+labs(fill="Branch Density")+scale_fill_gradient(low="white",high="#CB454A")
p2<-p1+theme(legend.position="right",legend.background=element_rect(size=2,linetype='solid'),legend.text = element_text(size=6),legend.title=element_text(size=8),legend.box.margin = margin(0, 0, 0, 0, "cm"))
#p2<-p1+scale_fill_gradient(low="white",high="#CB454A")
girafe(code=print(p2),width_svg=9,height_svg=6,options=list(opts_sizing(rescale=FALSE)))
shiny::runApp('ShinyApps/bank_branch_density')
